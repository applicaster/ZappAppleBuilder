defaults: &defaults
  working_directory: ~/Zapp-iOS
  environment:
    - ZAPPTOOL_VERSION: 1.7
    - PROJECT_NAME: "Zapp-App"
    - SCRIPTS_FOLDER: "Zapp-Scripts"
    - BUILD_PATH: ~/build_debug
    - SCRIPTS_LOCAL_FOLDER: "~/.scripts-iOS"
    - SCRIPTS_REPO_PATH: "git@github.com:applicaster/Scripts-iOS.git"
    #fastlane variables
    - LC_ALL: "en_US.UTF-8"
    - LANG: "en_US.UTF-8"

persisted_folders: &persisted_folders
  root: ~/
  paths:
    - Zapp-iOS/*
    - Zapp-iOS/.*

git_restore_cache: &git_restore_cache
  name: Git - restore cache
  key: Zapp-iOS-v8.0-{{ .Branch }}-{{ .Revision }}-{{ .Environment.version_id }}
  keys:
    - Zapp-iOS-v8.0-{{ .Branch }}-{{ .Revision }}
    - Zapp-iOS-v8.0-{{ .Branch }}-
    - Zapp-iOS-v8.0-

git_checkout_tag: &git_checkout_tag
  name: Git - checkout tag or use branch
  command: |
    if [ -z "$tag" ] || !(git rev-parse -q --verify "refs/tags/${tag}" >/dev/null);
    then
      echo "No tag available - Building current branch"
    else
      git fetch --tags
      git checkout ${tag}
    fi

git_submodule_update: &git_submodule_update
  name: Git - submodules update
  command: |
    git fetch
    git checkout .
    git submodule sync --recursive
    git submodule update --init --recursive

git_save_cache: &git_save_cache
  name: Git - save cache
  key: Zapp-iOS-v8.0-{{ .Branch }}-{{ .Revision }}-{{ .Environment.version_id }}
  paths:
    - ".git"
    - "ApplicasterSDK"
    - "ApplicasterUIKit"
    - "ComponentsSDK"
    - "ComponentsStyles"
    - "Crossmates"
    - "Feed"
    - "ZappPlugins"
    - "ZappHelpers"
    - "ZappAppConnector"
    - "ZappLayoutComponentsSDK-iOS"

set_ruby_version: &set_ruby_version
  name: Ruby - set version
  command:  echo "ruby-2.4" > ~/.ruby-version

check_ruby_version: &check_ruby_version
  name: Ruby - version
  command:  ruby -v

restore_homebrew_cache: &restore_homebrew_cache
  name: Homebrew - restore cache
  key: Zapp-iOS-v6-Brew

setup_homebrew: &setup_homebrew
  name: Homebrew - prepare (brew tap)
  command: brew tap applicaster/tap

save_homebrew_cache: &save_homebrew_cache
  name: Homebrew - save cache
  key: Zapp-iOS-v6-Brew
  paths:
    - "/usr/local/Homebrew"

install_zapptool: &install_zapptool
  name: ZappTool - Install
  command: brew install zapptool/zapptool@${ZAPPTOOL_VERSION} -v

check_zapptool_version: &check_zapptool_version
  name: ZappTool - version
  command: zapptool -v

version: 2
notify:
  webhooks:
    - url: https://zapp.applicaster.com/callbacks/build_status/circleci_builds
    - url: https://zapp-dev.herokuapp.com/callbacks/build_status/circleci_builds
jobs:
  init:
    <<: *defaults
    macos:
      xcode: "9.3.0"
    shell: /bin/bash --login -eo pipefail
    steps:
      - restore_cache:
          <<: *git_restore_cache

      - checkout

      - run:
          <<: *git_checkout_tag

      - run:
          <<: *git_submodule_update

      - save_cache:
          <<: *git_save_cache

      - run:
          <<: *set_ruby_version

      - run:
          <<: *check_ruby_version

      - restore_cache:
          <<: *restore_homebrew_cache

      - run:
          <<: *setup_homebrew

      - save_cache:
          <<: *save_homebrew_cache

      - run:
          <<: *install_zapptool

      - run:
          <<: *check_zapptool_version

      - run:
          name: ZappTool - prepare application environment
          command: |
            if [ "$bundle_identifier" ];
            then
              zapptool --get-npm-dependencies
            else
              zapptool --env .layout2_uitesting_env --get-npm-dependencies
            fi

      - persist_to_workspace:
          <<: *persisted_folders

  node:
    <<: *defaults
    docker:
      - image: "applicaster/zapp:0.8"

    steps:
      - attach_workspace:
          at: ~/

      - run:
          name: Install npm dependencies
          command: npm install

      # Zapp Pipes bundle
      - run:
          name: Zapp Pipes - bundle creation
          command: |
            if [[ ! -z ${version_id} ]];
            then
              npm run zapp-pipes-package $version_id
              EXIT_CODE=$?

              if [[ $EXIT_CODE != 0 ]]
              then
                echo 'packager script failed ! stopping build'
                exit $EXIT_CODE
              fi
            else
              echo Not a Zapp build - skipping
            fi

      - persist_to_workspace:
          <<: *persisted_folders

  build_app:
    <<: *defaults
    macos:
      xcode: "9.3.0"
    shell: /bin/bash --login -eo pipefail

    steps:
      - attach_workspace:
          at: ~/

      - run:
          <<: *set_ruby_version

      - run:
          <<: *check_ruby_version

      - restore_cache:
          <<: *restore_homebrew_cache

      - run:
          <<: *setup_homebrew

      - save_cache:
          <<: *save_homebrew_cache

      - run:
          <<: *install_zapptool

      - run:
          <<: *check_zapptool_version

      - run:
          name: Scripts - Adding scripts
          command: |
            if [ ! -d "$SCRIPTS_LOCAL_FOLDER" ]; then
              echo "SCRIPTS_REPO_PATH=$SCRIPTS_REPO_PATH"
              echo "SCRIPTS_LOCAL_FOLDER=$SCRIPTS_LOCAL_FOLDER"

              git clone $SCRIPTS_REPO_PATH $SCRIPTS_LOCAL_FOLDER
            else
              echo "Repo exists in local path: $SCRIPTS_LOCAL_FOLDER"
              git -C $SCRIPTS_LOCAL_FOLDER fetch
              git -C $SCRIPTS_LOCAL_FOLDER fetch --tags
              git -C $SCRIPTS_LOCAL_FOLDER checkout
              git -C $SCRIPTS_LOCAL_FOLDER pull origin master
            fi

            SCRIPTS_VERSION_FILENAME="ScriptsVersion"
            SCRIPTS_REPO_VERSION="0.0.24"

            if [ -e "$SCRIPTS_VERSION_FILENAME" ]; then
                SCRIPTS_REPO_VERSION=$(head -n 1 $SCRIPTS_VERSION_FILENAME)
            fi

            git -C $SCRIPTS_LOCAL_FOLDER checkout $SCRIPTS_REPO_VERSION

      # Prepare Bundler
      - restore_cache:
          name: Bundler - restore cache
          key: Zapp-iOS-v6.0.1-{{ checksum "Gemfile.lock" }}

      - run:
          name: Bundler - update dependencies
          command: bundle update

      - save_cache:
          name: Bundler - save cache
          key: Zapp-iOS-v6.0.1-{{ checksum "Gemfile.lock" }}
          paths:
            - /Users/distiller/.rubies/ruby-2.4.2/lib/ruby/gems/2.4.0/gems

      # Add know host relevant for Prosieben only
      - run:
          name: Scripts - Add known hosts
          command: $SCRIPTS_LOCAL_FOLDER/circleCi/addKnownHosts.sh

      # Restore Cocoapods cache, save cache on lower level, after pod update
      - restore_cache:
          name: CocoaPods - restore cache
          keys:
            - Zapp-iOS-CocoaPods-1-{{ checksum "Podfile.lock" }}

      - run:
          name: CocoaPods - version
          command: bundle exec pod --version

      - run:
          name: CocoaPods - pod repo update
          command: bundle exec pod repo update

      # update node and cocoapod default dependencies so that they can be cached
      - run:
          name: CocoaPods - update default dependencies
          command: bundle exec pod update

      # Cache CocoaPods
      - save_cache:
          name: CocoaPods - save cache
          key: Zapp-iOS-CocoaPods-1-{{ checksum "Podfile.lock" }}
          paths:
            - "~/.cocoapods"
            - "Pods"

      # Update submodule dev pod to closed version (release, master or preview branch)
      - run:
          name: Scripts - Update submodules dev pod to closed version
          command: |
            echo; echo
            $SCRIPTS_LOCAL_FOLDER/circleCi/createClosedSubmodules.sh

      # HockeyApp
      - run:
          name: HockeyApp - add the applicaster distribution group for to this app
          command: |
            applicaster_distribution_group_id=6408
            if [ "$hockey_app_public_identifier" ];
            then
              echo "\nAdding Applicaster Distribution group on hockeyapp to the app (if not added before)"
              curl -X PUT -H "X-HockeyAppToken:${HOCKEY_APP_TOKEN}" https://rink.hockeyapp.net/api/2/apps/$hockey_app_public_identifier/app_teams/$applicaster_distribution_group_id
              echo "\n"
            fi

      - run:
          name: ZappTool - prepare application environment
          command: |
            if [ "$bundle_identifier" ];
            then
              zapptool --no-npm-install
            else
              zapptool --env .layout2_uitesting_env --no-npm-install
            fi

      # Tests
      - run:
          name: Tests - start
          command: |
            if [[ ! $bundle_identifier ]];
            then
              echo "Test will be started!"
              bundle exec fastlane ios test
            else
              echo "Tests will not be started - bundle_identifier exists. It means that build from Zapp. Debug or Store"
            fi

      - store_test_results:
          name: Test results - collecting
          path: ./CircleArtifacts/test-results

      - deploy:
          name: Building Zapp-App - appStore build
          command: |
                if [ -z "$distribution_key_url" ];
                then
                  echo "No Distribution Key. Store version will be skipped."
                else
                  ./$SCRIPTS_FOLDER/add-keys.sh
                  ruby ./$SCRIPTS_FOLDER/change-system-capability-value.rb com.apple.Push 0 1

                  echo "-s--- adding fastlane-credentials"
                  fastlane fastlane-credentials add --username $itunes_connect_user --password $itunes_connect_password
                  echo "-e--- adding fastlane-credentials"

                  echo "\nStarting build store\n"
                  ./$SCRIPTS_FOLDER/build-store.sh
                  ruby ./$SCRIPTS_FOLDER/change-system-capability-value.rb com.apple.Push 1 0
                  ./$SCRIPTS_FOLDER/remove-keys.sh
                fi

      - deploy:
          name: Building Zapp-App - enterprise build
          command: |
            if [ -z "$bundle_identifier" ];
            then
              echo "Bundle identifier NOT set! Enterprise Build will be skipped"
            else
              ./$SCRIPTS_FOLDER/add-keys.sh
              ./$SCRIPTS_FOLDER/build-enterprise.sh
              ./$SCRIPTS_FOLDER/remove-keys.sh
            fi

      - deploy:
          name: Creating Zapp SDK
          command: |
            if [ "$triggered_by" = "zapp" ];
            then
              echo "Skipping SDK creation"
            else
              if [ -z "$CIRCLE_TAG" ];
              then
                echo "no tag passing branch name"
                version=$CIRCLE_BRANCH
              else
                version=$CIRCLE_TAG
              fi

              bundle exec rake zapp_sdks:create[ios,$version,$CIRCLE_PROJECT_REPONAME]
              bundle exec rake zapp_sdks:publish_changelog[ios,$version]
            fi

      - store_artifacts:
          name: Artifacts - collecting
          path: ./CircleArtifacts

workflows:
  version: 2
  main_work_flow:
    jobs:
      - init:
          filters:
            tags:
              only: /^[0-9]+[.][0-9]+[.][0-9]+$/
      - node:
          requires:
            - init
      - build_app:
          requires:
            - node
