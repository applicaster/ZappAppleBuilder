# Uncomment the next line to define a global platform for your project

 def add_flipper_pods!(versions = {})
   flipperkit_version = '0.42.0'
   pod 'FlipperKit', '~>' + flipperkit_version, :configuration => 'Debug'
   pod 'FlipperKit/FlipperKitLayoutPlugin', '~>' + flipperkit_version, :configuration => 'Debug'
   pod 'FlipperKit/SKIOSNetworkPlugin', '~>' + flipperkit_version, :configuration => 'Debug'
   pod 'FlipperKit/FlipperKitUserDefaultsPlugin', '~>' + flipperkit_version, :configuration => 'Debug'
   pod 'FlipperKit/FlipperKitReactPlugin', '~>' + flipperkit_version, :configuration => 'Debug'

   # It is likely that you'll only want to include Flipper in debug builds,
   # in which case you add the `:configuration` directive:
   pod 'FlipperKit', '~>' + flipperkit_version, :configuration => 'Debug'
   pod 'FlipperKit/FlipperKitLayoutComponentKitSupport', '~>' + flipperkit_version, :configuration => 'Debug'
   pod 'FlipperKit/SKIOSNetworkPlugin', '~>' + flipperkit_version, :configuration => 'Debug'
   pod 'FlipperKit/FlipperKitUserDefaultsPlugin', '~>' + flipperkit_version, :configuration => 'Debug'
   pod 'flipper-plugin-react-native-performance', :path => "./node_modules/flipper-plugin-react-native-performance/ios", :configuration => 'Debug'

   # ...unfortunately at this time that means you'll need to explicitly mark
   # transitive dependencies as being for debug build only as well:
   pod 'Flipper-DoubleConversion', :configuration => 'Debug'
   pod 'Flipper-Folly', :configuration => 'Debug'
   pod 'Flipper-Glog', :configuration => 'Debug'
   pod 'Flipper-PeerTalk', :configuration => 'Debug'
   pod 'CocoaLibEvent', :configuration => 'Debug'
   pod 'boost-for-react-native', :configuration => 'Debug'
   pod 'OpenSSL-Universal', :configuration => 'Debug'
   pod 'CocoaAsyncSocket', :configuration => 'Debug'
   # ...except, of course, those transitive dependencies that your
   # application itself depends, e.g.:
   pod 'ComponentKit', '~> 0.30'

   # If you use `use_frameworks!` in your Podfile,
   # uncomment the below $static_framework array and also
   # the pre_install section.  This will cause Flipper and
   # it's dependencies to be static and all other pods to
   # be dynamic.
   $static_framework = ['FlipperKit', 'Flipper', 'Flipper-Folly',
     'CocoaAsyncSocket', 'ComponentKit', 'Flipper-DoubleConversion',
     'Flipper-Glog', 'Flipper-PeerTalk', 'Flipper-RSocket', 'YogaKit',
     'CocoaLibEvent', 'OpenSSL-Universal', 'boost-for-react-native']

   pre_install do |installer|
     Pod::Installer::Xcode::TargetValidator.send(:define_method, :verify_no_static_framework_transitive_dependencies) {}
     installer.pod_targets.each do |pod|
         if $static_framework.include?(pod.name)
           def pod.build_type;
             Pod::Target::BuildType.static_library
           end
         end
       end
   end
 end


# Post Install processing for Flipper
def flipper_post_install(installer)
	installer.pods_project.targets.each do |target|
		if target.name == 'YogaKit'
			target.build_configurations.each do |config|
				config.build_settings['SWIFT_VERSION'] = '5.1'
            end
        end
    end

    file_name = Dir.glob("*.xcodeproj")[0]
    app_project = Xcodeproj::Project.open(file_name)
    app_project.native_targets.each do |target|
      if target.name == 'ZappTvOS'
        target.build_configurations.each do |config|
          swflags = config.build_settings['OTHER_SWIFT_FLAGS'] || '$(inherited) '
          unless swflags.include? '-DFB_SONARKIT_ENABLED'
            puts 'Adding -DFB_SONARKIT_ENABLED in OTHER_SWIFT_FLAGS...'
            swflags << '-DFB_SONARKIT_ENABLED'
          end
          config.build_settings['OTHER_SWIFT_FLAGS'] = swflags
        end
      end
      app_project.save
    end
    installer.pods_project.save
end
