# Uncomment the next line to define a global platform for your project
platform :ios, '11.0'
require_relative './node_modules/@react-native-community/cli-platform-ios/native_modules'

require 'resolv-replace'
install! 'cocoapods', :deterministic_uuids => false, :preserve_pod_file_structure => true
use_frameworks!

source 'git@github.com:applicaster/CocoaPods.git'
source 'git@github.com:applicaster/CocoaPods-Private.git'
source 'https://cdn.cocoapods.org/'

# Zaptool sources - Do not remove or change.


pre_install do |installer|
	# workaround for https://github.com/CocoaPods/CocoaPods/issues/3289
	Pod::Installer::Xcode::TargetValidator.send(:define_method, :verify_no_static_framework_transitive_dependencies) {}
end

puts("\n\nCocoaPods preparing for platform: iOS\n\n")

def shared_pods
    # This frameworks added to support backwards compatibility
    pod 'ZappPlugins', '= 11.6.6'
    pod 'ZappPushPluginsSDK', '= 11.0.1'
    pod 'ZappAnalyticsPluginsSDK', '= 11.0.0'
    pod 'ZappCore', '= 0.9.16'
    pod 'ZappApple', '= 0.7.18'
    pod 'QuickBrickApple', :path => './node_modules/@applicaster/quick-brick-native-apple/QuickBrickApple.podspec'
    pod 'FBLazyVector', :path => './node_modules/react-native/Libraries/FBLazyVector'
    pod 'FBReactNativeSpec', :path => './node_modules/react-native/Libraries/FBReactNativeSpec'
    pod 'RCTRequired', :path => './node_modules/react-native/Libraries/RCTRequired'
    pod 'RCTTypeSafety', :path => './node_modules/react-native/Libraries/TypeSafety'
    pod 'React', :path => './node_modules/react-native/'
    pod 'React-Core', :path => './node_modules/react-native/'
    pod 'React-CoreModules', :path => './node_modules/react-native/React/CoreModules'
    pod 'React-Core/DevSupport', :path => './node_modules/react-native/'
    pod 'React-RCTActionSheet', :path => './node_modules/react-native/Libraries/ActionSheetIOS'
    pod 'React-RCTAnimation', :path => './node_modules/react-native/Libraries/NativeAnimation'
    pod 'React-RCTBlob', :path => './node_modules/react-native/Libraries/Blob'
    pod 'React-RCTImage', :path => './node_modules/react-native/Libraries/Image'
    pod 'React-RCTLinking', :path => './node_modules/react-native/Libraries/LinkingIOS'
    pod 'React-RCTNetwork', :path => './node_modules/react-native/Libraries/Network'
    pod 'React-RCTSettings', :path => './node_modules/react-native/Libraries/Settings'
    pod 'React-RCTText', :path => './node_modules/react-native/Libraries/Text'
    pod 'React-RCTVibration', :path => './node_modules/react-native/Libraries/Vibration'
    pod 'React-Core/RCTWebSocket', :path => './node_modules/react-native/'
    pod 'React-cxxreact', :path => './node_modules/react-native/ReactCommon/cxxreact'
    pod 'React-jsi', :path => './node_modules/react-native/ReactCommon/jsi'
    pod 'React-jsiexecutor', :path => './node_modules/react-native/ReactCommon/jsiexecutor'
    pod 'React-jsinspector', :path => './node_modules/react-native/ReactCommon/jsinspector'
    pod 'Yoga', :path => './node_modules/react-native/ReactCommon/yoga', :modular_headers => true
    pod 'ReactCommon/callinvoker', :path => './node_modules/react-native/ReactCommon'
    pod 'ReactCommon/turbomodule/core', :path => './node_modules/react-native/ReactCommon'
    pod 'DoubleConversion', :podspec => './node_modules/react-native/third-party-podspecs/DoubleConversion.podspec'
    pod 'glog', :podspec => './node_modules/react-native/third-party-podspecs/glog.podspec'
    pod 'Folly', :podspec => './node_modules/react-native/third-party-podspecs/Folly.podspec'

    # Zaptool pods - Do not remove or change.
end

 def add_flipper_pods!(versions = {})
   flipperkit_version = '0.42.0'
   pod 'FlipperKit', '~>' + flipperkit_version, :configuration => 'Debug'
   pod 'FlipperKit/FlipperKitLayoutPlugin', '~>' + flipperkit_version, :configuration => 'Debug'
   pod 'FlipperKit/SKIOSNetworkPlugin', '~>' + flipperkit_version, :configuration => 'Debug'
   pod 'FlipperKit/FlipperKitUserDefaultsPlugin', '~>' + flipperkit_version, :configuration => 'Debug'
   pod 'FlipperKit/FlipperKitReactPlugin', '~>' + flipperkit_version, :configuration => 'Debug'
   
   # It is likely that you'll only want to include Flipper in debug builds,
   # in which case you add the `:configuration` directive:
   pod 'FlipperKit', '~>' + flipperkit_version, :configuration => 'Debug'
   pod 'FlipperKit/FlipperKitLayoutComponentKitSupport', '~>' + flipperkit_version, :configuration => 'Debug'
   pod 'FlipperKit/SKIOSNetworkPlugin', '~>' + flipperkit_version, :configuration => 'Debug'
   pod 'FlipperKit/FlipperKitUserDefaultsPlugin', '~>' + flipperkit_version, :configuration => 'Debug'
   pod 'flipper-plugin-react-native-performance', :path => "./node_modules/flipper-plugin-react-native-performance/ios", :configuration => 'Debug'
   # ...unfortunately at this time that means you'll need to explicitly mark
   # transitive dependencies as being for debug build only as well:
   pod 'Flipper-DoubleConversion', :configuration => 'Debug'
   pod 'Flipper-Folly', :configuration => 'Debug'
   pod 'Flipper-Glog', :configuration => 'Debug'
   pod 'Flipper-PeerTalk', :configuration => 'Debug'
   pod 'CocoaLibEvent', :configuration => 'Debug'
   pod 'boost-for-react-native', :configuration => 'Debug'
   pod 'OpenSSL-Universal', :configuration => 'Debug'
   pod 'CocoaAsyncSocket', :configuration => 'Debug'
   # ...except, of course, those transitive dependencies that your
   # application itself depends, e.g.:
   pod 'ComponentKit', '~> 0.30'

   # If you use `use_frameworks!` in your Podfile,
   # uncomment the below $static_framework array and also
   # the pre_install section.  This will cause Flipper and
   # it's dependencies to be static and all other pods to
   # be dynamic.
   $static_framework = ['FlipperKit', 'Flipper', 'Flipper-Folly',
     'CocoaAsyncSocket', 'ComponentKit', 'Flipper-DoubleConversion',
     'Flipper-Glog', 'Flipper-PeerTalk', 'Flipper-RSocket', 'YogaKit',
     'CocoaLibEvent', 'OpenSSL-Universal', 'boost-for-react-native']

   pre_install do |installer|
     Pod::Installer::Xcode::TargetValidator.send(:define_method, :verify_no_static_framework_transitive_dependencies) {}
     installer.pod_targets.each do |pod|
         if $static_framework.include?(pod.name)
           def pod.build_type;
             Pod::Target::BuildType.static_library
           end
         end
       end
   end
 end


# Post Install processing for Flipper
def flipper_post_install(installer)
    installer.pods_project.targets.each do |target|
        if target.name == 'YogaKit'
            target.build_configurations.each do |config|
                config.build_settings['SWIFT_VERSION'] = '5.1'
            end
        end
    end
    
    file_name = Dir.glob("*.xcodeproj")[0]
    app_project = Xcodeproj::Project.open(file_name)
    app_project.native_targets.each do |target|
      if target.name == 'ZappiOS'
        target.build_configurations.each do |config|
          swflags = config.build_settings['OTHER_SWIFT_FLAGS'] || '$(inherited) '
          unless swflags.include? '-DFB_SONARKIT_ENABLED'
            puts 'Adding -DFB_SONARKIT_ENABLED in OTHER_SWIFT_FLAGS...'
            swflags << '-DFB_SONARKIT_ENABLED'
          end
          config.build_settings['OTHER_SWIFT_FLAGS'] = swflags
        end
      end
      app_project.save
    end
    installer.pods_project.save
end
  
target 'ZappiOS' do
  shared_pods
  use_native_modules!
  
  # Enables Flipper.
   add_flipper_pods!
end

target 'ZappiOSTests' do
  inherit! :search_paths
end

target 'NotificationServiceExtension' do
    # Zaptool notification service extension pods - Do not remove or change.

end

  
post_install do |installer|
    flipper_post_install(installer)

    installer.pods_project.targets.each do |target|
        target.build_configurations.each do |config|
            config.build_settings['APPLICATION_TARGET'] = "ZappiOS"
            config.build_settings['ENABLE_BITCODE'] = 'YES'
            config.build_settings['EXPANDED_CODE_SIGN_IDENTITY'] = ""
            config.build_settings['CODE_SIGNING_REQUIRED'] = "NO"
            config.build_settings['CODE_SIGNING_ALLOWED'] = "NO"
            config.build_settings['OTHER_CFLAGS'] = ['$(inherited)', "-fembed-bitcode"]
            config.build_settings['BITCODE_GENERATION_MODE']  = "bitcode"
						# This works around a unit test issue introduced in Xcode 10.
            # We only apply it to the Debug configuration to avoid bloating the app size
            if config.name == "Debug" && defined?(target.product_type) && target.product_type == "com.apple.product-type.framework"
                config.build_settings['ALWAYS_EMBED_SWIFT_STANDARD_LIBRARIES'] = "YES"
						end
        end
    end
end
