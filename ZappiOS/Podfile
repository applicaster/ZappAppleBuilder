local_build = ENV['triggered_by'].nil? && ENV['CIRCLECI'].nil?

should_add_flipper_on_local_build = true
should_remove_app_extensions_on_local_build = true

setup_flipper = local_build && should_add_flipper_on_local_build
remove_app_extensions = local_build && should_remove_app_extensions_on_local_build

load 'Flipper' if setup_flipper

platform :ios, '12.0'
require_relative './node_modules/@react-native-community/cli-platform-ios/native_modules'
require_relative '../scripts/autolink-react-dependencies.rb'

require 'resolv-replace'
install! 'cocoapods', :deterministic_uuids => false, :preserve_pod_file_structure => true, :warn_for_unused_master_specs_repo => false
use_frameworks! :linkage => :static

source 'git@github.com:applicaster/CocoaPods.git'
source 'git@github.com:applicaster/CocoaPods-Private.git'
source 'https://cdn.cocoapods.org/'

# Zaptool sources - Do not remove or change.

pre_install do |_installer|
  # workaround for https://github.com/CocoaPods/CocoaPods/issues/3289
  Pod::Installer::Xcode::TargetValidator.send(:define_method, :verify_no_static_framework_transitive_dependencies) {}
end

puts("\n\nCocoaPods preparing for platform: iOS\n\n")

def shared_pods
    # This frameworks added to support backwards compatibility
    pod 'ZappPlugins', '= 12.0.0'
    pod 'ZappAnalyticsPluginsSDK', :path => './node_modules/@applicaster/zapp-analytics-plugins/apple/ZappAnalyticsPluginsSDK.podspec'
    pod 'ZappPushPluginsSDK', :path => './node_modules/@applicaster/zapp-push-plugins/apple/ZappPushPluginsSDK.podspec'
    pod 'QuickBrickApple', :path => './node_modules/@applicaster/quick-brick-native-apple/QuickBrickApple.podspec'
    pod 'ZappCore', :path => './node_modules/@applicaster/zapp-core/apple/ZappCore.podspec'
    pod 'ZappApple', :path => '/Users/alexzchut/Documents/Applicaster/Github/Zapp-Frameworks/plugins/zapp-apple/apple/ZappApple.podspec.json'
    pod 'XrayLogger', :path => './node_modules/@applicaster/x-ray/apple/XrayLogger.podspec'
    pod 'react-native-viewpager', :path => 'node_modules/@react-native-community/viewpager/react-native-viewpager.podspec'
    pod 'react-native-webview', :path => './node_modules/react-native-webview/react-native-webview.podspec'
    # Zaptool pods - Do not remove or change.

end

target 'ZappiOS' do
  shared_pods
  use_native_modules!
  use_react_native!
  puts "Is local build: #{local_build}"
  # Enables Flipper
  add_flipper_pods! if setup_flipper
end

target 'ZappiOSTests' do
  inherit! :search_paths
end

target 'NotificationServiceExtension' do
    # Zaptool notification service extension pods - Do not remove or change.
end

target 'NotificationContentExtension' do
    # Zaptool notification content extension pods - Do not remove or change.

end

post_install do |installer|
    flipper_post_install(installer) if setup_flipper

    installer.pods_project.targets.each do |target|
        target.build_configurations.each do |config|
            config.build_settings['APPLICATION_TARGET'] = "ZappiOS"
            config.build_settings['ENABLE_BITCODE'] = 'YES'
            config.build_settings['EXPANDED_CODE_SIGN_IDENTITY'] = ""
            config.build_settings['CODE_SIGNING_REQUIRED'] = "NO"
            config.build_settings['CODE_SIGNING_ALLOWED'] = "NO"
            config.build_settings['OTHER_CFLAGS'] = ['$(inherited)', "-fembed-bitcode"]
            config.build_settings['BITCODE_GENERATION_MODE']  = "bitcode"
            config.build_settings.delete 'IPHONEOS_DEPLOYMENT_TARGET'
						# This works around a unit test issue introduced in Xcode 10.
            # We only apply it to the Debug configuration to avoid bloating the app size
            if config.name == "Debug" && defined?(target.product_type) && target.product_type == "com.apple.product-type.framework"
                config.build_settings['ALWAYS_EMBED_SWIFT_STANDARD_LIBRARIES'] = "YES"
            end
            
            # Default Xcode 12 settings fail to build CocoaPods-generate umbrella headers
            # https://github.com/CocoaPods/CocoaPods/issues/9902
            config.build_settings['CLANG_WARN_QUOTED_INCLUDE_IN_FRAMEWORK_HEADER'] = 'NO'
        end
    end
    
    remove_app_extensions_after_pod_update if remove_app_extensions
end

def remove_app_extensions_after_pod_update
  cmd = "cd .. && bundle exec fastlane ios remove_app_extensions_targets project_name:ZappiOS"
  system("#{cmd}")
end
